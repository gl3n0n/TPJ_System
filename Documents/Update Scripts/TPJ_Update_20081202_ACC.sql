
PROMPT Creating Table 'ACC_ACCOUNT_GROUPS' 
CREATE TABLE ACC_ACCOUNT_GROUPS
 (CODE  VARCHAR2(16) NOT NULL
 ,NAME  VARCHAR2(64) NOT NULL
 ,CREATED_BY  VARCHAR2(32) NOT NULL
 ,DT_CREATED  DATE NOT NULL
 ,MODIFIED_BY  VARCHAR2(32)
 ,DT_MODIFIED  DATE
 )
/


PROMPT Creating Table 'ACC_ACCOUNTS' 
CREATE TABLE ACC_ACCOUNTS
 (CODE  VARCHAR2(22) NOT NULL
 ,NAME  VARCHAR2(64) NOT NULL
 ,ACCL_CODE  VARCHAR2(12) NOT NULL
 ,ACGR_CODE  VARCHAR2(12) NOT NULL
 ,CREATED_BY  VARCHAR2(32) NOT NULL
 ,DT_CREATED  DATE NOT NULL
 ,MODIFIED_BY  VARCHAR2(32)
 ,DT_MODIFIED  DATE
 )
/

PROMPT Creating Table 'ACC_ACCOUNT_CLASS' 
CREATE TABLE ACC_ACCOUNT_CLASS
 (CODE  VARCHAR2(16) NOT NULL
 ,NAME  VARCHAR2(64) NOT NULL
 ,CREATED_BY  VARCHAR2(32) NOT NULL
 ,DT_CREATED  DATE NOT NULL
 ,MODIFIED_BY  VARCHAR2(32)
 ,DT_MODIFIED  DATE
 )
/

PROMPT Creating Table 'ACC_BANKS' 
CREATE TABLE ACC_BANKS
 (CODE  VARCHAR2(16) NOT NULL
 ,NAME  VARCHAR2(64) NOT NULL
 ,ACCOUNT_TYPE  VARCHAR2(16) NOT NULL
 ,ACCOUNT_NO  VARCHAR2(32)
 ,BANK_BRANCH  VARCHAR2(32)
 ,BANK_ADDRESS  VARCHAR2(255)
 ,START_CHECK_NO  VARCHAR2(32)
 ,ACCO_CODE  VARCHAR2(22) NOT NULL
 ,CREATED_BY  VARCHAR2(32) NOT NULL
 ,DT_CREATED  DATE NOT NULL
 ,MODIFIED_BY  VARCHAR2(32)
 ,DT_MODIFIED  DATE
 )
/

PROMPT Creating Table 'CMS_CUSTOMERS' 
CREATE TABLE CMS_CUSTOMERS
 (CODE  VARCHAR2(16) NOT NULL
 ,NAME  VARCHAR2(64) NOT NULL
 ,ADDRESS  VARCHAR2(128)
 ,TEL_NO  VARCHAR2(22)
 ,FAX_NO  VARCHAR2(22)
 ,EMAIL  VARCHAR2(64)
 ,CONTACT_PERSON  VARCHAR2(64)
 ,CREATED_BY  VARCHAR2(32) NOT NULL
 ,DT_CREATED  DATE NOT NULL
 ,MODIFIED_BY  VARCHAR2(32)
 ,DT_MODIFIED  DATE
 )
/


ALTER TABLE ACC_ACCOUNT_GROUPS ADD (CONSTRAINT
 ACGR_PK PRIMARY KEY 
  (CODE))
/

PROMPT Creating Primary Key on 'ACC_ACCOUNTS'
ALTER TABLE ACC_ACCOUNTS ADD (CONSTRAINT
 ACCO_PK PRIMARY KEY 
  (CODE))
/

PROMPT Creating Primary Key on 'ACC_ACCOUNT_CLASS'
ALTER TABLE ACC_ACCOUNT_CLASS ADD (CONSTRAINT
 ACCL_PK PRIMARY KEY 
  (CODE))
/



 
PROMPT Creating Foreign Key on 'ACC_ACCOUNTS'
ALTER TABLE ACC_ACCOUNTS ADD (CONSTRAINT
 ACCO_ACGR_FK FOREIGN KEY 
  (ACGR_CODE) REFERENCES ACC_ACCOUNT_GROUPS
  (CODE))
/
 
PROMPT Creating Foreign Key on 'ACC_ACCOUNTS'
ALTER TABLE ACC_ACCOUNTS ADD (CONSTRAINT
 ACCO_ACCL_FK FOREIGN KEY 
  (ACCL_CODE) REFERENCES ACC_ACCOUNT_CLASS
  (CODE))
/


PROMPT Creating Primary Key on 'ACC_BANKS'
ALTER TABLE ACC_BANKS ADD (CONSTRAINT
 ACBN_PK PRIMARY KEY 
  (CODE))
/



 
PROMPT Creating Foreign Key on 'ACC_BANKS'
ALTER TABLE ACC_BANKS ADD (CONSTRAINT
 ACBN_ACCO_FK FOREIGN KEY 
  (ACCO_CODE) REFERENCES ACC_ACCOUNTS
  (CODE))
/


alter table inv_suppliers add acco_code varchar2(16)
/

PROMPT Creating Primary Key on 'CMS_CUSTOMERS'
ALTER TABLE CMS_CUSTOMERS ADD (CONSTRAINT
 CUST_PK PRIMARY KEY 
  (CODE))
/






DELETE FROM CG_REF_CODES
WHERE RV_DOMAIN = 'ACC_BANKS.ACCOUNT_TYPE'
/

INSERT INTO CG_REF_CODES (RV_DOMAIN, RV_LOW_VALUE, RV_HIGH_VALUE, RV_ABBREVIATION, RV_MEANING)
VALUES ('ACC_BANKS.ACCOUNT_TYPE', 'CURRENT', NULL, NULL, 'Current Account')
/
INSERT INTO CG_REF_CODES (RV_DOMAIN, RV_LOW_VALUE, RV_HIGH_VALUE, RV_ABBREVIATION, RV_MEANING)
VALUES ('ACC_BANKS.ACCOUNT_TYPE', 'SAVING', NULL, NULL, 'Saving Account')
/

COMMIT
/

create or replace view acc_subsidiary_codes as
select 'BANK' sl_type, code sl_code, name sl_name, created_by, dt_created, modified_by, dt_modified
from   acc_banks
union
select 'SUPPLIER' sl_type, code sl_code, name sl_name, created_by, dt_created, modified_by, dt_modified
from   inv_suppliers
union
select 'CUSTOMER' sl_type, code sl_code, name sl_name, created_by, dt_created, modified_by, dt_modified
from   cms_customers
/

rename PCV_VOUCHER_HDR to acc_PCV_VOUCHER_HDR;
rename PCV_VOUCHER_DTL to acc_PCV_VOUCHER_DTL;
alter table acc_PCV_VOUCHER_DTL drop constraint VODT_ACCT_FK;

drop table PCV_ACCOUNTS;
drop table PCV_TYPES;

create role TPJ_ACC_SUPER_USER;
create role TPJ_ACC_MAINTENANCE_WRITE;
create role TPJ_ACC_MAINTENANCE_READ;
create role TPJ_ACC_PCV_WRITE;
create role TPJ_ACC_PCV_READ;
create role TPJ_ACC_JV_WRITE;
create role TPJ_ACC_JV_READ;
create role TPJ_ACC_AP_WRITE;
create role TPJ_ACC_AP_READ;
create role TPJ_ACC_AR_WRITE;
create role TPJ_ACC_AR_READ;
create role TPJ_ACC_DISBURSEMENT_WRITE;
create role TPJ_ACC_DISBURSEMENT_READ;
select 'create public synonym ' || table_name || ' for ' || table_name || ';' from cat where table_name like 'ACC%';
select 'grant select, insert, update, delete on ' || table_name || ' to TPJ_ACC_SUPER_USER;' from cat where table_name like 'ACC%';
select 'grant select, insert, update, delete on ' || table_name || ' to TPJ_ACC_SUPER_USER;' from cat where table_name like 'ACC%';





CREATE TABLE "TPJ"."ACC_JV_HDR"
 (    "JV_NO" NUMBER(12,0) NOT NULL ENABLE,
      "JV_DATE" DATE NOT NULL ENABLE,
      "JV_STATUS" VARCHAR2(12) NOT NULL ENABLE,
      "PREPARED_BY" VARCHAR2(32),
      "RECEIVED_BY" VARCHAR2(32),
      "DT_PREPARED" DATE,
      "APPROVED_BY" VARCHAR2(32),
      "DT_APPROVED" DATE,
      "CREATED_BY" VARCHAR2(32) NOT NULL ENABLE,
      "DT_CREATED" DATE NOT NULL ENABLE,
      "MODIFIED_BY" VARCHAR2(32),
      "DT_MODIFIED" DATE,
      "PARTICULAR" VARCHAR2(256) NOT NULL ENABLE,
       CONSTRAINT "JVHD_PK" PRIMARY KEY ("JV_NO")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255
STORAGE(INITIAL 65536 NEXT 65536 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS"  ENABLE
 ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS";


CREATE TABLE "TPJ"."ACC_JV_DTL"
 (    "ITEM_NO" NUMBER(4,0) NOT NULL ENABLE,
      "JV_NO" NUMBER(12,0) NOT NULL ENABLE,
      "ACCO_CODE" VARCHAR2(22) NOT NULL ENABLE,
      "REF_TYPE" VARCHAR2(16),
      "REF_CODE" VARCHAR2(32),
      "REF_DESC" VARCHAR2(256),
      "DEBIT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "CREDIT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "CREATED_BY" VARCHAR2(32) NOT NULL ENABLE,
      "DT_CREATED" DATE NOT NULL ENABLE,
      "MODIFIED_BY" VARCHAR2(32),
      "DT_MODIFIED" DATE,
       CONSTRAINT "JVDT_PK" PRIMARY KEY ("JV_NO", "ITEM_NO")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS"  ENABLE,
       CONSTRAINT "JVDT_JVHD_FK" FOREIGN KEY ("JV_NO")
        REFERENCES "TPJ"."ACC_JV_HDR" ("JV_NO") ENABLE
 ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 65536 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS";

DELETE FROM CG_REF_CODES
WHERE RV_DOMAIN = 'ACC_JV_HDR.JV_STATUS'
/

INSERT INTO CG_REF_CODES (RV_DOMAIN, RV_LOW_VALUE, RV_HIGH_VALUE, RV_ABBREVIATION, RV_MEANING)
VALUES ('ACC_JV_HDR.JV_STATUS', 'NEW', NULL, NULL, 'New')
/
INSERT INTO CG_REF_CODES (RV_DOMAIN, RV_LOW_VALUE, RV_HIGH_VALUE, RV_ABBREVIATION, RV_MEANING)
VALUES ('ACC_JV_HDR.JV_STATUS', 'NOTED', NULL, NULL, 'Noted')
/
INSERT INTO CG_REF_CODES (RV_DOMAIN, RV_LOW_VALUE, RV_HIGH_VALUE, RV_ABBREVIATION, RV_MEANING)
VALUES ('ACC_JV_HDR.JV_STATUS', 'APPROVED', NULL, NULL, 'Approved')
/
INSERT INTO CG_REF_CODES (RV_DOMAIN, RV_LOW_VALUE, RV_HIGH_VALUE, RV_ABBREVIATION, RV_MEANING)
VALUES ('ACC_JV_HDR.JV_STATUS', 'POSTED', NULL, NULL, 'Posted')
/
INSERT INTO CG_REF_CODES (RV_DOMAIN, RV_LOW_VALUE, RV_HIGH_VALUE, RV_ABBREVIATION, RV_MEANING)
VALUES ('ACC_JV_HDR.JV_STATUS', 'CANCELLED', NULL, NULL, 'Cancelled')
/

COMMIT
/


PROMPT Altering Table 'ACC_JV_HDR' 
ALTER TABLE ACC_JV_HDR 
 MODIFY (JV_STATUS  VARCHAR2(12) DEFAULT 'NEW'
 )
/

create sequence acc_jv_seq start with 1 increment by 1 nocache order;

drop table acc_pcv_voucher_dtl;
drop table acc_pcv_voucher_hdr;

CREATE TABLE "TPJ"."ACC_PCV_HDR"
 (    "PCV_NO" NUMBER(12,0) NOT NULL ENABLE,
      "PCV_DATE" DATE NOT NULL ENABLE,
      "PCV_TYPE" VARCHAR2(16),
      "PCV_PAYEE" VARCHAR2(64) NOT NULL ENABLE,
      "PCV_STATUS" VARCHAR2(16) DEFAULT 'FOR APPROVAL' NOT NULL ENABLE,
      "DEPT_CODE" VARCHAR2(16),
      "EMPL_EMPL_ID" VARCHAR2(16),
      "APPROVED_BY" VARCHAR2(32),
      "DT_APPROVED" DATE,
      "CASHIER" VARCHAR2(32),
      "RECEIVED_BY" VARCHAR2(32),
      "DT_RECEIVED" DATE,
      "CREATED_BY" VARCHAR2(32) NOT NULL ENABLE,
      "DT_CREATED" DATE NOT NULL ENABLE,
      "MODIFIED_BY" VARCHAR2(32),
      "DT_MODIFIED" DATE,
       CONSTRAINT "PVHD_PK" PRIMARY KEY ("PCV_NO")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS"  ENABLE,
       CONSTRAINT "PVHD_DEPT_FK" FOREIGN KEY ("DEPT_CODE")
        REFERENCES "TPJ"."PMS_DEPARTMENTS" ("CODE") ENABLE,
       CONSTRAINT "PVHD_EMPL_FK" FOREIGN KEY ("EMPL_EMPL_ID")
        REFERENCES "TPJ"."PMS_EMPLOYEES" ("EMPL_ID") ENABLE
 ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS";

CREATE TABLE "TPJ"."ACC_PCV_DTL"
 (    "PCV_NO" NUMBER(12,0) NOT NULL ENABLE,
      "ITEM_NO" NUMBER(4,0) NOT NULL ENABLE,
      "ACCO_CODE" VARCHAR2(22) NOT NULL ENABLE,
      "EMPL_EMPL_ID" VARCHAR2(16),
      "DEPT_CODE" VARCHAR2(16),
      "PARTICULARS" VARCHAR2(64) NOT NULL ENABLE,
      "AMT" NUMBER(10,2) NOT NULL ENABLE,
      "DEBIT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "CREDIT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "CREATED_BY" VARCHAR2(32) NOT NULL ENABLE,
      "DT_CREATED" DATE NOT NULL ENABLE,
      "MODIFIED_BY" VARCHAR2(32),
      "DT_MODIFIED" DATE,
       CONSTRAINT "PVDT_PK" PRIMARY KEY ("PCV_NO", "ITEM_NO")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS"  ENABLE,
       CONSTRAINT "PVDT_DEPT_FK" FOREIGN KEY ("DEPT_CODE")
        REFERENCES "TPJ"."PMS_DEPARTMENTS" ("CODE") ENABLE,
       CONSTRAINT "PVDT_EMPL_FK" FOREIGN KEY ("EMPL_EMPL_ID")
        REFERENCES "TPJ"."PMS_EMPLOYEES" ("EMPL_ID") ENABLE,
       CONSTRAINT "PVDT_PVHD_FK" FOREIGN KEY ("PCV_NO")
        REFERENCES "TPJ"."ACC_PCV_HDR" ("PCV_NO") ENABLE,
       CONSTRAINT "PVDT_ACCO_FK" FOREIGN KEY ("ACCO_CODE")
        REFERENCES "TPJ"."ACC_ACCOUNTS" ("CODE") ENABLE
 ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS";


create table acc_pcr_hdr 
 (    "PCR_NO" NUMBER(12,0) NOT NULL ENABLE,
      "PCR_DATE" DATE NOT NULL ENABLE,
      "PCV_DESC" VARCHAR2(64) NOT NULL ENABLE,
      "PCV_STATUS" VARCHAR2(16) DEFAULT 'FOR APPROVAL' NOT NULL ENABLE,
      "APPROVED_BY" VARCHAR2(32),
      "DT_APPROVED" DATE,
      "PREPARED_BY" VARCHAR2(32),
      "DT_PREPARED" DATE,
      "CREATED_BY" VARCHAR2(32) NOT NULL ENABLE,
      "DT_CREATED" DATE NOT NULL ENABLE,
      "MODIFIED_BY" VARCHAR2(32),
      "DT_MODIFIED" DATE,
       CONSTRAINT "PRHD_PK" PRIMARY KEY ("PCR_NO")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS"  ENABLE,
       CONSTRAINT "PRHD_EMPL_FK" FOREIGN KEY ("PREPARED_BY")
        REFERENCES "TPJ"."PMS_EMPLOYEES" ("EMPL_ID") ENABLE
 ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS";


create table acc_pcr_dtl 
 (    "PCR_NO" NUMBER(12,0) NOT NULL ENABLE,
      "PCV_NO" NUMBER(12,0) NOT NULL ENABLE,
      "ITEM_NO" NUMBER(4,0) NOT NULL ENABLE,
      "ACCO_CODE" VARCHAR2(22) NOT NULL ENABLE,
      "EMPL_EMPL_ID" VARCHAR2(16),
      "DEPT_CODE" VARCHAR2(16),
      "PARTICULARS" VARCHAR2(64) NOT NULL ENABLE,
      "AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "CASH_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "MEALS_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "TRANSPO_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "FUELS_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "FINANCIAL_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "SUPPLIES_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "TAXES_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "REPAIR_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "VALE_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "ADVANCES_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "MISC_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "SUNDRY" VARCHAR2(22),
      "SUNDRY_AMT" NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
      "CREATED_BY" VARCHAR2(32) NOT NULL ENABLE,
      "DT_CREATED" DATE NOT NULL ENABLE,
      "MODIFIED_BY" VARCHAR2(32),
      "DT_MODIFIED" DATE,
       CONSTRAINT "PRDT_PK" PRIMARY KEY ("PCR_NO", "PCV_NO", "ITEM_NO")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS"  ENABLE,
       CONSTRAINT "PRDT_DEPT_FK" FOREIGN KEY ("DEPT_CODE")
        REFERENCES "TPJ"."PMS_DEPARTMENTS" ("CODE") ENABLE,
       CONSTRAINT "PRDT_EMPL_FK" FOREIGN KEY ("EMPL_EMPL_ID")
        REFERENCES "TPJ"."PMS_EMPLOYEES" ("EMPL_ID") ENABLE,
       CONSTRAINT "PRDT_PVDT_FK" FOREIGN KEY ("PCV_NO", "ITEM_NO")
        REFERENCES "TPJ"."ACC_PCV_DTL" ("PCV_NO", "ITEM_NO") ENABLE,
       CONSTRAINT "PRDT_PRHD_FK" FOREIGN KEY ("PCR_NO")
        REFERENCES "TPJ"."ACC_PCR_HDR" ("PCR_NO") ENABLE,
       CONSTRAINT "PRDT_ACCO_FK" FOREIGN KEY ("ACCO_CODE")
        REFERENCES "TPJ"."ACC_ACCOUNTS" ("CODE") ENABLE
 ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS";

create sequence acc_pcr_seq start with 1 increment by 1 nocache order;
create sequence acc_pcv_seq start with 1 increment by 1 nocache order;


DELETE FROM CG_REF_CODES
WHERE RV_DOMAIN = 'ACC_PCR_HDR.PCV_STATUS'
/

INSERT INTO CG_REF_CODES (RV_DOMAIN, RV_LOW_VALUE, RV_HIGH_VALUE, RV_ABBREVIATION, RV_MEANING)
VALUES ('ACC_PCR_HDR.PCV_STATUS', 'NEW', NULL, NULL, 'New')
/
INSERT INTO CG_REF_CODES (RV_DOMAIN, RV_LOW_VALUE, RV_HIGH_VALUE, RV_ABBREVIATION, RV_MEANING)
VALUES ('ACC_PCR_HDR.PCV_STATUS', 'APPROVED', NULL, NULL, 'Approved')
/
INSERT INTO CG_REF_CODES (RV_DOMAIN, RV_LOW_VALUE, RV_HIGH_VALUE, RV_ABBREVIATION, RV_MEANING)
VALUES ('ACC_PCR_HDR.PCV_STATUS', 'POSTED', NULL, NULL, 'Posted')
/
INSERT INTO CG_REF_CODES (RV_DOMAIN, RV_LOW_VALUE, RV_HIGH_VALUE, RV_ABBREVIATION, RV_MEANING)
VALUES ('ACC_PCR_HDR.PCV_STATUS', 'CANCELLED', NULL, NULL, 'Cancelled')
/

COMMIT
/


PROMPT Altering Table 'ACC_PCV_REPLENISHMENT_HDR' 
ALTER TABLE ACC_PCV_REPLENISHMENT_HDR 
 MODIFY (PCV_STATUS  VARCHAR2(16) DEFAULT 'NEW'
 )
/


CREATE TABLE "TPJ"."ACC_SYSTEM_PARAMETERS"
 (    "OPTION_CODE" VARCHAR2(32) NOT NULL ENABLE,
      "OPTION_NUM1" NUMBER(12,2),
      "OPTION_NUM2" NUMBER(12,2),
      "OPTION_CHAR" VARCHAR2(64),
      "OPTION_DESC" VARCHAR2(128),
       CONSTRAINT "ACSP_PK" PRIMARY KEY ("OPTION_CODE")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS"  ENABLE
 ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
TABLESPACE "USERS";

INSERT INTO ACC_SYSTEM_PARAMETERS values ('MEALS ACCOUNT CODE', null, null, '925', null);
INSERT INTO ACC_SYSTEM_PARAMETERS values ('CASH ACCOUNT CODE', null, null, '10001', null);
INSERT INTO ACC_SYSTEM_PARAMETERS values ('TRANSPO ACCOUNT CODE', null, null, '914', null);
INSERT INTO ACC_SYSTEM_PARAMETERS values ('FUELS ACCOUNT CODE', null, null, '901', null);
INSERT INTO ACC_SYSTEM_PARAMETERS values ('FINANCIAL ACCOUNT CODE', null, null, '927', null);
INSERT INTO ACC_SYSTEM_PARAMETERS values ('SUPPLIES ACCOUNT CODE', null, null, '903', null);
INSERT INTO ACC_SYSTEM_PARAMETERS values ('REPAIR ACCOUNT CODE', null, null, '923', null);
INSERT INTO ACC_SYSTEM_PARAMETERS values ('VALE ACCOUNT CODE', null, null, '60013', null);
INSERT INTO ACC_SYSTEM_PARAMETERS values ('ADVANCES ACCOUNT CODE', null, null, '915', null);
INSERT INTO ACC_SYSTEM_PARAMETERS values ('MISC ACCOUNT CODE', null, null, '939', null);
INSERT INTO ACC_SYSTEM_PARAMETERS values ('CO_NAME', null, null, 'TRANS-PACIFIC JOURNEY FISHING CORPORATION', null);
commit;


CREATE FUNCTION SF_GET_ACC_SYSPARAM_CHARVAL (
  P_OPTION IN VARCHAR )
RETURN VARCHAR IS
  --
  --
  V_CHAR_VALUE VARCHAR2(80);
BEGIN
     SELECT option_char
     INTO
        v_char_value
     FROM
        acc_system_parameters
     WHERE
        option_code = p_option;
     RETURN v_char_value;
EXCEPTION
     WHEN NO_DATA_FOUND THEN return '';
        --raise_application_error(-20001, 'ERROR - No value retrieved.');
END SF_GET_ACC_SYSPARAM_CHARVAL;
/

create public synonym SF_GET_ACC_SYSPARAM_CHARVAL for SF_GET_ACC_SYSPARAM_CHARVAL;
grant execute on SF_GET_ACC_SYSPARAM_CHARVAL to TPJ_ACC_SUPER_USER;


create or replace procedure sp_acc_pc_replenishment (
   p_pcr in number
   ) is
   vSundry        Varchar2(16) := NULL;
   nCash_amt      Number(12,2) := 0;
   nMeals_amt     Number(12,2) := 0;
   nTranspo_amt   Number(12,2) := 0;
   nFuels_amt     Number(12,2) := 0;
   nFinancial_amt Number(12,2) := 0;
   nSupplies_amt  Number(12,2) := 0;
   nTaxes_amt     Number(12,2) := 0;
   nRepair_amt    Number(12,2) := 0;
   nVale_amt      Number(12,2) := 0;
   nAdvances_amt  Number(12,2) := 0;
   nMisc_amt      Number(12,2) := 0;
   nSundry_amt    Number(12,2) := 0;
BEGIN

   for i in (select a.pcv_no, a.item_no, a.acco_code, a.particulars, a.amt, a.empl_empl_id, a.dept_code, b.pcv_date 
             from   acc_pcv_dtl a, acc_pcv_hdr b 
             where  a.pcv_no = b.pcv_no 
             and    b.pcv_status = 'APPROVED')
   loop
      if i.acco_code = sf_get_acc_sysparam_charval ('CASH ACCOUNT CODE') then
         nCash_amt := i.amt;
      elsif i.acco_code = sf_get_acc_sysparam_charval ('MEALS ACCOUNT CODE') then
         nMeals_amt := i.amt;
      elsif i.acco_code = sf_get_acc_sysparam_charval ('TRANSPO ACCOUNT CODE') then
         nTranspo_amt := i.amt;
      elsif i.acco_code = sf_get_acc_sysparam_charval ('FUELS ACCOUNT CODE') then
         nFuels_amt := i.amt;
      elsif i.acco_code = sf_get_acc_sysparam_charval ('FINANCIAL ACCOUNT CODE') then
         nFinancial_amt := i.amt;
      elsif i.acco_code = sf_get_acc_sysparam_charval ('SUPPLIES ACCOUNT CODE') then
         nSupplies_amt := i.amt;
      elsif i.acco_code = sf_get_acc_sysparam_charval ('TAXES ACCOUNT CODE') then
         nTaxes_amt := i.amt;
      elsif i.acco_code = sf_get_acc_sysparam_charval ('REPAIR ACCOUNT CODE') then
         nRepair_amt := i.amt;
      elsif i.acco_code = sf_get_acc_sysparam_charval ('VALE ACCOUNT CODE') then
         nVale_amt := i.amt;
      elsif i.acco_code = sf_get_acc_sysparam_charval ('ADVANCES ACCOUNT CODE') then
         nAdvances_amt := i.amt;
      elsif i.acco_code = sf_get_acc_sysparam_charval ('MISC ACCOUNT CODE') then
         nMisc_amt := i.amt;
      else
         vSundry     := i.acco_code;
         nSundry_amt := i.amt;
      end if;

      insert into acc_pcr_dtl 
             ( pcr_no, pcv_no, item_no, acco_code, empl_empl_id, dept_code, particulars, amt, cash_amt, meals_amt, transpo_amt,
               fuels_amt, financial_amt, supplies_amt, taxes_amt, repair_amt, vale_amt, advances_amt, misc_amt, sundry, sundry_amt,
               pcv_date, created_by, dt_created
             )
      values ( p_pcr, i.pcv_no, i.item_no, i.acco_code, i.empl_empl_id, i.dept_code, i.particulars, i.amt, nCash_amt, nMeals_amt, nTranspo_amt,
               nFuels_amt, nFinancial_amt, nSupplies_amt, nTaxes_amt, nRepair_amt, nVale_amt, nAdvances_amt, nMisc_amt, vSundry, nSundry_amt,
               i.pcv_date, user, sysdate 
             );

      nCash_amt      := 0;
      nMeals_amt     := 0;
      nTranspo_amt   := 0;
      nFuels_amt     := 0;
      nFinancial_amt := 0;
      nSupplies_amt  := 0;
      nTaxes_amt     := 0;
      nRepair_amt    := 0;
      nVale_amt      := 0;
      nAdvances_amt  := 0;
      nMisc_amt      := 0;
      vSundry        := NULL;
      nSundry_amt    := 0;

   end loop;

   for j in (select pcv_no from acc_pcr_dtl where pcr_no = p_pcr group by pcv_no)
   loop
      update acc_pcv_hdr
      set    pcv_status = 'POSTED'
      where  pcv_no = j.pcv_no;
   end loop;

   commit;
END sp_acc_pc_replenishment;          
/
show err


create public synonym sp_pc_replenishment for sp_pc_replenishment;
grant execute on sp_pc_replenishment to TPJ_ACC_SUPER_USER;
