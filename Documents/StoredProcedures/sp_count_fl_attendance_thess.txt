create or replace procedure sp_count_flt_attendance
(
   p_empl_id in  varchar2, 
   p_date_fr in  date, 
   p_date_to in  date, 
   p_numday  out number, 
   p_regsun  out number, 
   p_reghol  out number, 
   p_holsun  out number

) is
    
   -- greatest(vocr.dt_embarked,p_date_fr) start_date, 
   -- least(nvl(vocr.dt_disembarked,p_date_to),p_date_to) end_date, 
   cursor att_flt is
   select vocr.rowid row_id, vocr.dt_embarked, vocr.dt_disembarked,
          vocr.passenger
   from   cms_voyage_crew vocr, cms_vessels vess, pms_employees empl
   where  vocr.voya_voyage_date <= p_date_to
   and    vocr.dt_embarked <= p_date_to
   and    vocr.voya_vess_code = vess.code
   and    vocr.empl_empl_id = empl.empl_id
   and    vocr.empl_empl_id = p_empl_id
   and    vocr.passenger = 'N'
   order  by vocr.dt_embarked desc;

   nNumDay    Number := 0;
   nRegHol    Number := 0;
   nHolSun    Number := 0;
   nRegSun    Number := 0;
   nUpTO      Number := 0;
   dDate      Date;
   dStart     Date;
   dend       Date; 
   dFirstDay  Date;
   dPrevStart Date;
   dPrevend   Date; 
   nRecCtr    Number := 0;
begin  

   for j in att_flt loop

      dbms_output.put_line ('check 0: ' || to_char(j.dt_embarked) || ':' || to_char(j.dt_disembarked) || ':' || to_char(j.row_id));
      -- check start date 
      if j.dt_embarked < p_date_fr then
         dStart := p_date_fr;
      else
         dStart := j.dt_embarked;
      end if;

      -- check end date 
      if j.dt_disembarked is null then
         dEnd := p_date_to;
      elsif j.dt_disembarked > p_date_to then
         dEnd := p_date_to;
      elsif j.dt_disembarked < p_date_to then
         if j.dt_disembarked < p_date_fr then
            dEnd := p_date_fr;
         else
            dEnd := j.dt_disembarked;
         end if;
      end if;

      dbms_output.put_line ('check 1: ' || to_char(dStart) || ':' || to_char(dEnd) );
      if nRecCtr > 1 then
         if dStart >= dPrevStart then
            exit;
         end if; 
         if dEnd > dPrevStart then
            dEnd := dPrevStart;
         end if; 
      end if;

      -- check total days
      nUpTO := (dEnd-dStart) + 1;
      nNumDay := nNumDay + nUpTO;
      nRecCtr    := nRecCtr + 1;
      dPrevStart := dStart;  
      dPrevEnd   := dEnd;  
   end loop;     

   nRecCtr    := 0;
   dPrevStart := NULL;  
   dPrevEnd   := NULL;
   -- Every end of month count number of sundays, holidays, and sunday holidays. 
   if to_char(p_date_fr,'DD') = '16' then 
      dFirstDay := to_date(to_char(p_date_fr,'YYYYMM') || '01', 'YYYYMMDD');
      for j in att_flt loop
      
         -- check start date 
         if j.dt_embarked < dFirstDay then
            dStart := dFirstDay;
         else
            dStart := j.dt_embarked;
         end if;
      
         -- check end date 
         if j.dt_disembarked is null then
            dEnd := p_date_to;
         elsif j.dt_disembarked > p_date_to then
            dEnd := p_date_to;
         elsif j.dt_disembarked < p_date_to then
            if j.dt_disembarked < dFirstDay then
               dEnd := dFirstDay;
            else
               dEnd := j.dt_disembarked;
            end if;
         end if;
      
         if nRecCtr > 1 then
            if dStart >= dPrevStart then
               exit;
            end if; 
            if dEnd > dPrevStart then
               dEnd := dPrevStart;
            end if; 
         end if;
      
         -- check total days
         nUpTO := (dEnd-dStart) + 1;
         dDate := dStart-1;
         for i in 1..nUpTo loop
            dDate := dDate  + 1;
            if sf_is_holiday (dDate) = 1 then
               if sf_is_sunday(dDate) = 1 then
                  nHolSun := nHolSun + 1 ;  
               else
                  nRegHol := nRegHol + 1;   
               end if;
            else 
               if sf_is_sunday(dDate) = 1 then
                  nRegSun := nRegSun + 1;     
               end if;  
            end if;  
         end loop;
         nRecCtr    := nRecCtr + 1;
         dPrevStart := dStart;  
         dPrevEnd   := dEnd;  
      end loop;     

   end if;

   p_numday  := nNumDay;
   if to_char(p_date_to, 'DD') = '15' then
      p_regsun  := 0;
      p_reghol  := 0;
      p_holsun  := 0;
   else
      p_regsun  := nRegSun;
      p_reghol  := nRegHol;
      p_holsun  := nHolSun;
   end if;
end sp_count_flt_attendance;
/
show err 




   select vocr.rowid row_id, vocr.dt_embarked, vocr.dt_disembarked,
          vocr.passenger
   from   cms_voyage_crew vocr, cms_vessels vess, pms_employees empl
   where  vocr.voya_voyage_date <= to_date('20070115', 'YYYYMMDD')
   and    vocr.dt_embarked <= to_date('20070115', 'YYYYMMDD')
   and    vocr.voya_vess_code = vess.code
   and    vocr.empl_empl_id = empl.empl_id
   and    vocr.empl_empl_id = '0001'
   and    vocr.passenger = 'N'
   order  by vocr.dt_embarked desc;

set serveroutput on
declare
   p_numday  number; 
   p_regsun  number; 
   p_reghol  number; 
   p_holsun  number; 
begin
   --sp_count_flt_attendance ('0001', to_date('20070101', 'YYYYMMDD'), to_date('20070115', 'YYYYMMDD'), p_numday, p_regsun, p_reghol, p_holsun );
   --dbms_output.put_line ('check out: ' || to_char(p_numday) || ':' || to_char(p_regsun) || ':' || to_char(p_reghol) || ':' || to_char(p_holsun) );
   sp_count_flt_attendance ('0001', to_date('20070101', 'YYYYMMDD'), to_date('20070115', 'YYYYMMDD'), p_numday, p_regsun, p_reghol, p_holsun );
   dbms_output.put_line ('check out: ' || to_char(p_numday) || ':' || to_char(p_regsun) || ':' || to_char(p_reghol) || ':' || to_char(p_holsun) );
end;
/

set serveroutput on
declare
   p_numday  number; 
   p_regsun  number; 
   p_reghol  number; 
   p_holsun  number; 
begin
   sp_count_flt_attendance ('0001', to_date('20070116', 'YYYYMMDD'), to_date('20070131', 'YYYYMMDD'), p_numday, p_regsun, p_reghol, p_holsun );
   dbms_output.put_line ('check out: ' || to_char(p_numday) || ':' || to_char(p_regsun) || ':' || to_char(p_reghol) || ':' || to_char(p_holsun) );
end;
/
